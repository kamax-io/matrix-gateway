/*
 * Matrix Gateway Daemon
 * Copyright (C) 2018 Kamax Sarl
 *
 * https://www.kamax.io/
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

group = 'io.kamax'
mainClassName = 'io.kamax.mxgwd.undertow.UndertowApp'

def confSampleFile = "mxgwd-sample.yaml"
def distDir = "${project.buildDir}/dist"

def debBinPath = "/usr/lib/${project.name}"
def debConfPath = "/etc/${project.name}"
def debSystemdPath = "/etc/systemd/system"

def debBuildBasePath = "${project.buildDir}/tmp/debian"
def debBuildDebianPath = "${debBuildBasePath}/DEBIAN"
def debBuildBinPath = "${debBuildBasePath}${debBinPath}"
def debBuildConfPath = "${debBuildBasePath}${debConfPath}"
def debBuildSystemdPath = "${debBuildBasePath}${debSystemdPath}"

import java.util.regex.Pattern
String gitVersion() {
    def versionPattern = Pattern.compile("v(\\d+\\.)?(\\d+\\.)?(\\d+)(-.*)?")
    ByteArrayOutputStream out = new ByteArrayOutputStream()
    exec {
        commandLine = ['git', 'describe', '--tags', '--always', '--dirty']
        standardOutput = out
    }
    def v = out.toString().replace(System.lineSeparator(), '')
    return versionPattern.matcher(v).matches() ? v.substring(1) : v
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.3'
    }
}


repositories {
    maven { url 'https://kamax.io/maven/releases' }
    maven { url 'https://kamax.io/maven/snapshots' }
    jcenter()
}

dependencies {
    compile 'org.slf4j:slf4j-simple:1.7.25'
    compile 'commons-io:commons-io:2.6'
    compile 'org.yaml:snakeyaml:1.20'
    compile 'io.undertow:undertow-core:2.0.1.Final'
    compile 'io.kamax:matrix-java-sdk:0.0.9'

    // DB
    compile 'com.j256.ormlite:ormlite-jdbc:5.0'
    compile 'org.xerial:sqlite-jdbc:3.20.0'

    testCompile 'junit:junit:4.12'
}

shadowJar {
    baseName = project.name
    classifier = null
    version = null
}

task debBuild(dependsOn: shadowJar) {
    doLast {
        def v = gitVersion()
        println "Version for package: ${v}"
        mkdir distDir
        mkdir debBuildBasePath
        mkdir debBuildDebianPath
        mkdir debBuildBinPath
        mkdir debBuildConfPath
        mkdir debBuildSystemdPath

        copy {
            from "${project.buildDir}/libs/${project.name}.jar"
            into debBuildBinPath
        }

        ant.chmod(
                file: "${debBuildBinPath}/${project.name}.jar",
                perm: 'a+x'
        )

        copy {
            from(project.file(confSampleFile))
            into debBuildConfPath
        }

        copy {
            from project.file('src/debian')
            into debBuildDebianPath
        }

        ant.replace(
                file: "${debBuildDebianPath}/control",
                token: 'Version: 0',
                value: "Version: ${v}"
        )

        ant.chmod(
                file: "${debBuildDebianPath}/postinst",
                perm: 'a+x'
        )

        ant.chmod(
                file: "${debBuildDebianPath}/prerm",
                perm: 'a+x'
        )

        copy {
            from "${project.file('src/systemd/mxgwd.service')}"
            into debBuildSystemdPath
        }

        exec {
            commandLine(
                    'fakeroot',
                    'dpkg-deb',
                    '-b',
                    debBuildBasePath,
                    "${project.buildDir}/dist"
            )
        }
    }
}
